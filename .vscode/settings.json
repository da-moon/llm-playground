{

  "editor.codeActionsOnSave": {
    "source.fixAll": "always",
    "source.fixAll.unusedImports": "always",
    "source.fixAll.convertImportFormat": "always",
    "source.organizeImports": "always",
  },
  "terminal.integrated.defaultProfile.linux": "poetry",
  // source "$(poetry env use $(which python) > /dev/null 2>&1 && poetry config virtualenvs.in-project false --local && poetry env info --path)/bin/activate"
  "terminal.integrated.env.linux": {
    // "VSCODE_INJECTION": "1",
    "POETRY_VIRTUALENVS_CREATE": "true",
    "POETRY_VIRTUALENVS_IN_PROJECT": "false"
  },
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash",
      "args": [
        "-i"
      ]
    },
    "poetry": {
      "overrideName": true,
      "icon": "snake",
      "color": "terminal.ansiCyan",
      "args": [
        "-l",
        "-i",
        "-c",
        "poetry shell || { bash -i ; }"
      ],
      "path": "bash"
    }
  },
  "files.exclude": {
    "**/.venv": true,
    "**/__pycache__": true,
    "**/*.pyc": true,
    "**/*.pyo": true,
    "**/*.pyd": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.tox": true,
    "**/.coverage": true,
    "**/.eggs": true,
    "**/*.egg-info": true,
    "**/.ipynb_checkpoints": true
  },

  "search.exclude": {
    ".oxc/**": true,
    "**/*.code-search": true,
    "*.lock": true,
    "package-lock.json": true,
  },
  "[json][jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml",
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.tabSize": 4,
    "editor.rulers": [
      72, // PEP8-17 docstrings
      // 79, // PEP8-17 default max
      // 88, // Black default
      // 99, // PEP8-17 acceptable max
      120, // Our hard rule
    ],
    "editor.codeActionsOnSave": {
      "source.organizeImports": "always",
    },
    "editor.formatOnSave": true
  },
  // Important to follow the config in pyrightconfig.json
  "python.analysis.useLibraryCodeForTypes": false,
  "python.terminal.activateEnvironment": true,
  "python.analysis.diagnosticMode": "workspace",
  "isort.check": false,
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoFormatStrings": true,
  "python.analysis.completeFunctionParens": true,
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,
  "python.analysis.inlayHints.variableTypes": true,
  "python.experiments.enabled": false,
  "python.globalModuleInstallation": false,
  "python.REPL.enableREPLSmartSend": false,
  "mypy-type-checker.args": [
    // "--config-file", "${workspaceFolder}/mypy.ini"
    "--ignore-missing-imports",
    "--follow-imports=silent",
    "--show-column-numbers",
    "--disallow-untyped-defs",
    "--disallow-untyped-calls",
    "--check-untyped-defs",
    "--no-implicit-optional"
  ],
  "python.analysis.autoImportCompletions": true
}
